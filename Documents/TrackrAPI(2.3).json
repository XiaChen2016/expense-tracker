{
    "swagger": "2.0",
    "info": {
        "title": "Expense Tracker API",
        "description": "Ttack your daily expense with this amazing app.",
        "version": "1.0.0"
    },
    "host": "api.tracker.com",
    "schemes": [
        "https"
    ],
    "basePath": "/api",
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "oauth": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "NOT SURE YET",
            "scopes": {
                "basic": "to read any and all data related to a user (e.g. following/followed-by\n lists, photos, etc.) (granted by default)\n"
            }
        },
        "key": {
            "type": "apiKey",
            "in": "query",
            "name": "access_token"
        }
    },
    "security": [
        {
            "oauth": [
                "basic"
            ]
        },
        {
            "key": []
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "description": "User and administrator log into the system.",
                "parameters": [
                    {
                        "name": "formData",
                        "required": true,
                        "in": "body",
                        "description": "Username and password.",
                        "schema": {
                            "$ref": "#/definitions/FormData"
                        }
                    }
                ],
                "tags": [
                    "User",
                    "Admin"
                ],
                "responses": {
                    "302": {
                        "description": "There could be two situations:\n\n(1) If username and password don't match, login failed, redirect to login page.\n\n(2) Usernmae and password match, login success.  Store user's information into session. Return user information to front end, and front end redirect to '/#/admin' or '/#/user' based on the user's role.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "summary": "Logout.",
                "description": "User and administrator log out.\n",
                "tags": [
                    "User",
                    "Admin"
                ],
                "responses": {
                    "302": {
                        "description": "Logout success, session is cleared, and window redirect to login page.\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Tag"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/initDatabase": {
            "get": {
                "summary": "Initate database.",
                "description": "System will delete all data, and create an administrator with username \"bilbo\", password \"123\", along with 30 users (40% among them are administrators). For every created user, assign 30 receipts to them. Then return to the login page.",
                "tags": [
                    "User",
                    "Admin"
                ],
                "responses": {
                    "200": {
                        "description": "Return the login page after initiation.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Tag"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{uid}/receipts": {
            "post": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "User",
                    "Receipt"
                ],
                "description": "User create receipts with time, location, projectID, tags and note.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    },
                    {
                        "name": "receipt",
                        "in": "body",
                        "required": true,
                        "description": "New receipt that is going to be stored into database.",
                        "schema": {
                            "$ref": "#/definitions/Receipt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Receipt"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "get": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "User",
                    "Receipt"
                ],
                "description": "User browse all receipts. If no query is provided, system will return the first page with size 10 of user's all receipts. Else, system will return certain number of receipts according to query.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    },
                    {
                        "name": "place",
                        "in": "query",
                        "description": "Place where use got the receipt.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "project",
                        "in": "query",
                        "description": "Name of the project.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Name of tag.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "item",
                        "in": "query",
                        "description": "Name of item.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxTotal",
                        "in": "query",
                        "description": "Maximum amount of receipt.",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "minTotal",
                        "in": "query",
                        "description": "Minimum amount of the receipt.",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "maxDate",
                        "in": "query",
                        "description": "The end date of the searching period, represented as milliseconds.",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "minDate",
                        "in": "query",
                        "description": "The end date of the searching period, represented as milliseconds.",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "pid",
                        "in": "query",
                        "description": "ID of the receipt's project.",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Number of page.",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Size of a page of the respond body.",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PageOfReceipt"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/user/{uid}/receipts/{rid}/items": {
            "post": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "User",
                    "Receipt",
                    "Item"
                ],
                "description": "At the second step of creating receipts, user would type a list of receipts.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "rid",
                        "in": "path",
                        "description": "Receipt's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "list_of_items",
                        "in": "body",
                        "description": "A list of items.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Item"
                            }
                        }
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Tag"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/user/{uid}": {
            "put": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "User"
                ],
                "description": "User reset password.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "email",
                        "in": "body",
                        "description": "This address would get an email, in which user can reset password.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Tag"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/user/{uid}/receipts/{rid}": {
            "get": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "User",
                    "Receipt"
                ],
                "description": "User view one receipt.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "rid",
                        "in": "path",
                        "description": "Receipt ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Receipt"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "User",
                    "Receipt"
                ],
                "description": "User can share receipts with others in the system, but other people can only read them.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "rid",
                        "in": "path",
                        "description": "Receipt ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "email_address",
                        "required": true,
                        "in": "body",
                        "description": "Email address of the user to share with.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meta": {
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "data": {
                                    "$ref": "#/definitions/Project"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "User",
                    "Receipt"
                ],
                "description": "User edit a receipt.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "rid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "receipt",
                        "in": "body",
                        "description": "The receipt edited by user.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Receipt"
                        }
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Receipt"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "User",
                    "Receipt"
                ],
                "description": "User delete a receipt.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "rid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Receipt"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/user/{uid}/projects": {
            "post": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "description": "User create a new project by naming it.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "project",
                        "required": true,
                        "in": "body",
                        "description": "Project to create(with it's ownerId and name).",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "tags": [
                    "User",
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "Return the newly created project.",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "get": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "description": "User browse all his projects.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "tags": [
                    "User",
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PageOfProject"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/user/{uid}/projects/{pid}": {
            "get": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "User",
                    "Project"
                ],
                "description": "User view one project.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "pid",
                        "in": "path",
                        "description": "ID of project.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "User",
                    "Project"
                ],
                "description": "User edit a project by changing it's name, and corresponding receipts.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "pid",
                        "in": "path",
                        "description": "ID of project.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "project",
                        "required": true,
                        "in": "body",
                        "description": "Project object with new name and new list of receipts.",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "User",
                    "Project"
                ],
                "description": "User delete a project. If a project is deleted, then all the receipts with it will also be deleted.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "pid",
                        "in": "path",
                        "description": "ID of project.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/user/{uid}/receipts/{rid}/pictures": {
            "post": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "description": "User upload a picture for an existing receipt, server will analyze the picture, and return a list of items on the receipt.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "rid",
                        "in": "path",
                        "description": "Project's ID.",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "file",
                        "required": true,
                        "in": "body",
                        "description": "A picture user chooses on front end.",
                        "schema": {
                            "format": "multipart/form-data"
                        }
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "tags": [
                    "User",
                    "Receipt",
                    "Picture"
                ],
                "responses": {
                    "200": {
                        "description": "Return a list of items.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Item"
                            }
                        }
                    },
                    "400": {
                        "description": "The picture is too big, or there is no text in it."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "get": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "description": "Since a receipt only has one picture associated with it, user would use receipt ID to get picture.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rid",
                        "in": "path",
                        "description": "Receipt's ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "tags": [
                    "User",
                    "Receipt",
                    "Picture"
                ],
                "responses": {
                    "200": {
                        "description": "Return the picture of the receipt.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "byte"
                            }
                        }
                    },
                    "400": {
                        "description": "There is no picture associated with the receipt."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "description": "A user is able to delete a picture if he uploaded a wrong one.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current user's ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rid",
                        "in": "path",
                        "description": "Receipt's ID.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "tags": [
                    "User",
                    "Receipt",
                    "Picture"
                ],
                "responses": {
                    "200": {
                        "description": "The picture is successfully deleted."
                    },
                    "400": {
                        "description": "There is no picture associated with the receipt."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/admin/{uid}/users": {
            "get": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin view users and search for users.",
                "description": "Admin can search users by their name, email and role.Everytime an admin wants to search user by name, role and phone, a GET request would be generated to the back-end. But when an admin wants to see the full information of a user, including both his profile and receipts, a GET request with userID as the query parameter would be generated.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current admin's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Size of a page.",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Index of the page.",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "User's name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email address.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isAdmin",
                        "in": "query",
                        "description": "If admin want to search for all admins, \"isAdmin\" is true, or it's false.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PageOfUser"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin create users.",
                "description": "Admin will fill in user's email, username, name, phone number and role. Then the system would generate an email to user's eamil address and prompt for confirmation.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current admin's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User's information.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/admin/{uid}/users/{userid}": {
            "post": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "description": "Admin edit user's profile",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current admin's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "userid",
                        "in": "path",
                        "description": "ID of user to be edited.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "formData",
                        "in": "body",
                        "description": "form data with name, list of phone numbers, and isAdmin in it.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EditUserFormData"
                        }
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's profile will be changed, the response is an user object.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/admin/{uid}/users/{userid}/isAdmin": {
            "post": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "description": "Admin edit user's profile",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current admin's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "userid",
                        "in": "path",
                        "description": "ID of user to be edited.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "isAdmin",
                        "in": "body",
                        "description": "Set user to be admin if \"isAdmin\" is true, else set user to be user. The reponse is a user object.",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's profile will be changed, the response is a user object.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/admin/{uid}/users/{userid}/ebable": {
            "put": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "description": "Admin enable users.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current admin's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "userid",
                        "in": "path",
                        "description": "ID of user to be edited.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's status will be changed to \"enabled\". The response is a user object.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/admin/{uid}/users/{userid}/disable": {
            "put": {
                "security": [
                    {
                        "key": []
                    },
                    {
                        "oauth": [
                            "basic"
                        ]
                    }
                ],
                "tags": [
                    "Admin"
                ],
                "description": "Admin disable users.",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Current admin's ID.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "userid",
                        "in": "path",
                        "description": "ID of user to be edited.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "credentials",
                        "in": "header",
                        "required": true,
                        "description": "Authentication credentials",
                        "type": "string",
                        "format": "xss-token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's status will be changed to \"enabled\". The response is a user object.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User's email address."
                },
                "id": {
                    "type": "string",
                    "description": "The user identifier number."
                },
                "username": {
                    "type": "string",
                    "description": "Username is used to login, it would be displayed on the top right conor, and every username is unique in the system."
                },
                "name": {
                    "type": "string",
                    "description": "User's name."
                },
                "isAdmin": {
                    "type": "boolean",
                    "description": "If user is admin, this property is true, or it's false."
                },
                "phone": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "description": "User's phone number"
                }
            }
        },
        "PageOfUser": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                },
                "first": {
                    "type": "boolean",
                    "description": "If current page is the first page, this property is true."
                },
                "last": {
                    "type": "boolean",
                    "description": "If current page is the last page, this property is true."
                },
                "number": {
                    "type": "number",
                    "description": "Number of current page."
                },
                "numberOfElements": {
                    "type": "number",
                    "description": "Number of elements in current page."
                },
                "size": {
                    "type": "number",
                    "description": "Number of pages."
                },
                "sort": {
                    "type": "string",
                    "description": "Sort type."
                },
                "totalElements": {
                    "type": "string",
                    "description": "Number of elements in all pages."
                },
                "totalPages": {
                    "type": "number",
                    "description": "Number of pages."
                }
            }
        },
        "PageOfReceipt": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Receipt"
                    }
                },
                "first": {
                    "type": "boolean",
                    "description": "If current page is the first page, this property is true."
                },
                "last": {
                    "type": "boolean",
                    "description": "If current page is the last page, this property is true."
                },
                "number": {
                    "type": "number",
                    "description": "Number of current page."
                },
                "numberOfElements": {
                    "type": "number",
                    "description": "Number of elements in current page."
                },
                "size": {
                    "type": "number",
                    "description": "Number of pages."
                },
                "sort": {
                    "type": "string",
                    "description": "Sort type."
                },
                "totalElements": {
                    "type": "string",
                    "description": "Number of elements in all pages."
                },
                "totalPages": {
                    "type": "number",
                    "description": "Number of pages."
                }
            }
        },
        "Project": {
            "type": "object",
            "properties": {
                "pid": {
                    "type": "string",
                    "description": "Unique identifier for the project."
                },
                "ownerId": {
                    "type": "string",
                    "description": "ID of owner."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the project."
                },
                "startDate": {
                    "type": "number",
                    "description": "Date when the project starts, a number of milliseconds."
                },
                "endDate": {
                    "type": "number",
                    "description": "Date when the project ends, a number of milliseconds."
                },
                "receipts": {
                    "description": "A list of receipt associated with the project.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Receipt"
                    }
                },
                "numOfReceipts": {
                    "type": "number",
                    "description": "Number of receipts associated with the project."
                }
            }
        },
        "PageOfProject": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Project"
                    }
                },
                "first": {
                    "type": "boolean",
                    "description": "If current page is the first page, this property is true."
                },
                "last": {
                    "type": "boolean",
                    "description": "If current page is the last page, this property is true."
                },
                "number": {
                    "type": "number",
                    "description": "Number of current page."
                },
                "numberOfElements": {
                    "type": "number",
                    "description": "Number of elements in current page."
                },
                "size": {
                    "type": "number",
                    "description": "Number of pages."
                },
                "sort": {
                    "type": "string",
                    "description": "Sort type."
                },
                "totalElements": {
                    "type": "string",
                    "description": "Number of elements in all pages."
                },
                "totalPages": {
                    "type": "number",
                    "description": "Number of pages."
                }
            }
        },
        "Item": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the item."
                },
                "price": {
                    "type": "number",
                    "description": "Price of item."
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity of item."
                }
            }
        },
        "Receipt": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of receipt."
                },
                "ownerId": {
                    "type": "string",
                    "description": "ID of the owner."
                },
                "time": {
                    "type": "number",
                    "description": "Time stamp of the receipt, a number of milliseconds."
                },
                "place": {
                    "type": "string",
                    "description": "Name of the merchant."
                },
                "list_of_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Item"
                    }
                },
                "total": {
                    "description": "Total amount of the receipt",
                    "type": "number",
                    "format": "double"
                },
                "picId": {
                    "type": "string",
                    "description": "ID of picture of the receipt."
                },
                "project_id": {
                    "type": "string",
                    "description": "ID of the project."
                },
                "categories": {
                    "description": "Categories of the receipt.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "note": {
                    "description": "Note of the receipt.",
                    "type": "string"
                }
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "media_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "EditUserFormData": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "newPhoneNumber": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isAdmin": {
                    "type": "boolean"
                }
            }
        },
        "FormData": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}